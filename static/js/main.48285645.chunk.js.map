{"version":3,"sources":["assets/svg/bicycle-solid.svg","context/map-context/map-context.tsx","containers/map/map.tsx","components/cities/cities.tsx","components/stations/stations.tsx","containers/sidebar/sidebar.tsx","services/axios.ts","services/citybik-api/index.ts","App.tsx","constants/country-codes.ts","reportWebVitals.ts","index.tsx"],"names":["initialValue","hideDetails","mapContext","createContext","state","dispatch","useMapContext","useContext","isHidden","type","payload","reducer","action","MapContextProvider","children","useReducer","value","Provider","LATLNG_ES","Map","networkDetails","networkStation","setNetworkStation","MapComponent","center","zoom","useMap","flyTo","markerIcon","Icon","iconUrl","BikeIcon","iconRetinaUrl","popupAnchor","iconSize","className","MapContainer","Object","keys","length","location","latitude","longitude","scrollWheelZoom","stations","map","station","Marker","position","icon","Popup","onOpen","openPopup","name","id","TileLayer","attribution","url","onClick","empty_slots","free_bikes","Cities","networks","getNetworkDetails","clearSearchInput","history","useHistory","city","push","handleCitySelection","Stations","useParams","useState","activeId","setActiveId","useEffect","normalizedId","slice","Sidebar","setNetworkDetails","useLocation","inputSearch","setInputSearch","inputFocus","setInputFocus","filteredNetworks","setFilteredNetworks","filteredStations","setFilteredStations","isHome","pathname","heading","filterNetworkResults","input","filter","network","toLowerCase","includes","filterStationResults","onFocus","onBlur","onChange","e","target","filteredResults","placeholder","exact","path","disabled","axios","create","baseURL","fetchNetworks","country","a","data","fetchNetworkDetails","App","setNetworks","getNetworks","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+XAAe,MAA0B,0C,qBCQnCA,EAAe,CACnBC,aAAa,GAGFC,EAAaC,wBAGvB,CAAEC,MAAOJ,EAAcK,SAAU,kBAAM,QAE7BC,EAAgB,kBAAMC,qBAAWL,IAEjCD,EAAmB,SAACO,GAAD,MAAwB,CACtDC,KAAM,eACNC,QAAS,CAAEF,cAGPG,EAAU,WAAkD,IAAjDP,EAAgD,uDAAjCJ,EAAcY,EAAmB,uCACvDJ,EAAaI,EAAOF,QAApBF,SAER,OAAQI,EAAOH,MACb,IAAK,eACH,OAAO,2BAAKL,GAAZ,IAAmBH,YAAaO,IAClC,QACE,OAAOJ,IAcES,EAVsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EAC3BC,qBAAWJ,EAASX,GADO,mBAE/CgB,EAAQ,CACZZ,MAHmD,KAInDC,SAJmD,MAOrD,OAAO,cAACH,EAAWe,SAAZ,CAAqBD,MAAOA,EAA5B,SAAoCF,KC1BvCI,EAA8B,CAAC,WAAY,SAyHlCC,EAvHiB,SAAC,GAI1B,IAHLC,EAGI,EAHJA,eACAC,EAEI,EAFJA,eACAC,EACI,EADJA,kBACI,EACwBhB,IAApBF,EADJ,EACIA,MAAOC,EADX,EACWA,SAETkB,EAGD,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAGd,OAFYC,cACRC,MAAMH,EAAQC,GACX,MAGHG,EAAa,IAAIC,OAAK,CAC1BC,QAASC,EACTC,cAAeD,EACfE,YAAa,CAAC,GAAI,IAClBC,SAAU,CAAC,GAAI,IACfC,UAAW,oBAiCb,OACE,sBAAKA,UAAU,cAAf,UACE,eAACC,EAAA,EAAD,CACED,UAAU,MACVX,OACIa,OAAOC,KAAKlB,GAAgBmB,OAC1B,CACEnB,EAAeoB,SAASC,SACxBrB,EAAeoB,SAASE,WAE1BxB,EAENO,KAAMY,OAAOC,KAAKlB,GAAgBmB,OAAS,GAAK,EAChDI,iBAAiB,EAXnB,UAaE,cAACpB,EAAD,CAAcC,OA5CZa,OAAOC,KAAKlB,GAAgBmB,OAC1BF,OAAOC,KAAKjB,GAAgBkB,OACzB,CAAClB,EAAeoB,SAAUpB,EAAeqB,WAE3C,CACLtB,EAAeoB,SAASC,SACxBrB,EAAeoB,SAASE,WAGrBxB,EAmCqCO,KA/BtCY,OAAOC,KAAKlB,GAAgBmB,OAC5BF,OAAOC,KAAKjB,GAAgBkB,OAAe,GACxC,GAEF,MA4BAF,OAAOC,KAAKlB,GAAgBmB,QAC7BnB,EAAewB,SAASC,KAAI,SAACC,GAAD,OAC1B,cAACC,EAAA,EAAD,CAEEC,SAAU,CAACF,EAAQL,SAAUK,EAAQJ,WACrCO,KAAMrB,EAHR,SAKE,cAACsB,EAAA,EAAD,CAAOC,OAAQ,kBAhCT,SAACL,GACjBxB,EAAkB,eAAKwB,IACvBzC,EAASJ,GAAY,IA8BUmD,CAAUN,IAA/B,SAA0CA,EAAQO,QAJ7CP,EAAQQ,OAQnB,cAACC,EAAA,EAAD,CACEC,YAAY,wFACZC,IAAI,0DAQR,sBAAKtB,UAAS,qBAAgB/B,EAAMH,YAAc,QAAU,IAA5D,UACE,wBAAQkC,UAAU,qBAAqBuB,QA1CnB,WACxBrD,EAASJ,GAAaG,EAAMH,eAyCxB,SACE,mBAAGkC,UAAW/B,EAAMH,YAAc,WAAa,GAA/C,iBAEF,qBAAKkC,UAAU,wBAAf,SACKE,OAAOC,KAAKlB,GAAgBmB,OAC3BF,OAAOC,KAAKjB,GAAgBkB,OAC5B,qCACE,qBAAKJ,UAAU,iCAAf,SACE,6BAAKd,EAAegC,SAEtB,8CAAiBhC,EAAesC,eAChC,6CAAgBtC,EAAeuC,kBAGhCxD,EAAMH,aACL,0EAIHG,EAAMH,aAAe,+E,OCzFnB4D,EAhCuB,SAAC,GAIhC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,iBAEMC,EAAUC,cAQhB,OACE,oBAAI/B,UAAU,uBAAd,SACG2B,EAASvB,OACRuB,EAASjB,KAAI,gBAAGS,EAAH,EAAGA,GAAgBa,EAAnB,EAAO3B,SAAY2B,KAAnB,OACX,oBAEEhC,UAAU,6BACVuB,QAAS,kBAbS,SAACJ,GAC3BU,IACAD,EAAkBT,GAClBW,EAAQG,KAAR,qBAA2Bd,IAUJe,CAAoBf,IAHrC,SAKE,4BAAIa,KAJCb,MAQT,oDCiBOgB,EAzC2B,SAAC,GAKpC,IAJLlD,EAII,EAJJA,eACAE,EAGI,EAHJA,kBACAyC,EAEI,EAFJA,kBACAC,EACI,EADJA,iBAEQV,EAAuBiB,cAAvBjB,GADJ,EAE4BkB,qBAF5B,mBAEGC,EAFH,KAEaC,EAFb,KAUJ,OANAC,qBAAU,WACR,IAAMC,EAAetB,EAAGuB,MAAM,GAC9Bd,EAAkBa,KAEjB,CAACtB,IAGF,oBAAInB,UAAU,uBAAd,SACGE,OAAOC,KAAKlB,GAAgBmB,QACM,IAAnCnB,EAAewB,SAASL,OACtBnB,EAAewB,SAASC,KAAI,SAACC,GAAD,OAC1B,oBAEEX,UAAS,oCACPsC,IAAa3B,EAAQQ,GAAK,UAAY,IAExCI,QAAS,WACPgB,EAAY5B,EAAQQ,IACpBhC,EAAkB,eAAKwB,IACvBkB,KARJ,SAWE,4BAAIlB,EAAQO,QAVPP,EAAQQ,OAcjB,oDC6FOwB,G,MAxHyB,SAAC,GAMlC,IALLhB,EAKI,EALJA,SACA1C,EAII,EAJJA,eACA2C,EAGI,EAHJA,kBACAzC,EAEI,EAFJA,kBACAyD,EACI,EADJA,kBAEMd,EAAUC,cACV1B,EAAWwC,cACT3E,EAAaC,IAAbD,SAHJ,EAIkCmE,mBAAiB,IAJnD,mBAIGS,EAJH,KAIgBC,EAJhB,OAKgCV,oBAAkB,GALlD,mBAKGW,EALH,KAKeC,EALf,OAM4CZ,qBAN5C,mBAMGa,EANH,KAMqBC,EANrB,OAO4Cd,qBAP5C,mBAOGe,EAPH,KAOqBC,EAPrB,KAiBEC,EAA+B,MAAtBjD,EAASkD,SAElBC,EAAUF,EAAS,gBAAkB,mBAerCzB,EAAmB,WACvBkB,EAAe,KAGXU,EAAuB,SAACC,GAAD,OAC3B/B,EAASgC,QAAO,SAACC,GAAD,OACdA,EAAQvD,SAAS2B,KAAK6B,cAAcC,SAASJ,OAG3CK,EAAuB,SAACL,GAC5B,OAAO,2BACFzE,GADL,IAEEwB,SAAUxB,EAAewB,SAASkD,QAAO,qBAAGzC,KACrC2C,cAAcC,SAASJ,SAKlC,OACE,sBAAK1D,UAAU,UAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,oDAEF,qBAAKA,UAAU,uBAAf,SACE,6BAAKwD,MAEP,sBACExD,UAAS,+BAA0BgD,EAAa,SAAW,IAAlD,OACLF,EAAc,GAAK,gBAEvBkB,QAAS,kBAAMf,GAAc,IAC7BgB,OAAQ,kBAAMhB,GAAc,IAL9B,UAOE,uBACEpE,MAAOiE,EACPoB,SAjDgB,SAACC,GAA4C,IAC7DtF,EAAUsF,EAAEC,OAAZvF,MAGR,GAFAkE,EAAelE,GAEXyE,EAAQ,CACV,IAAMe,EAAkBZ,EAAqB5E,GAC7C,OAAOsE,EAAoBkB,GAG7B,IAAMA,EAAkBN,EAAqBlF,GAC7CwE,EAAoBgB,IAwCZC,YACEhB,EAAS,0BAAuB,+BAGpC,qBACEtD,UAAU,8BACVuB,QAASM,UAKf,qBAAK7B,UAAU,eAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACE7C,SAAUuB,GAAoBvB,EAC9BC,kBAAmBA,EACnBC,iBAAkBA,MAGtB,cAAC,IAAD,CAAO2C,KAAK,gBAAZ,SACE,cAAC,EAAD,CACEvF,eAAgBmE,GAAoBnE,EACpCE,kBAAmBA,EACnByC,kBAAmBA,EACnBC,iBAAkBA,WAK1B,qBAAK7B,UAAU,iBAAf,SACE,wBACEA,UAAS,+BAA0BsD,EAAS,YAAc,IAC1DmB,SAAUnB,EACV/B,QAhGO,WACbM,IACA1C,EAAkB,IAClByD,EAAkB,IAClBd,EAAQG,KAAK,KACb/D,EAASJ,GAAY,KAwFjB,SAKE,yD,QCjIK4G,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,uCCDEC,EAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEAGZL,EAAM,KAHM,mBAEjB/C,EAFiB,EAEzBqD,KAAQrD,UAENmD,EAJuB,yCAKlBnD,EAASgC,QACd,SAACC,GAAD,OAAkBA,EAAQvD,SAASyE,UAAYA,MANxB,gCASpBnD,GAToB,2CAAH,sDAYbsD,EAAmB,uCAAG,WAAO9D,GAAP,iBAAA4D,EAAA,sEAGlBL,EAAMvD,GAHY,uBAEvByC,EAFuB,EAE/BoB,KAAQpB,QAFuB,kBAK1BA,GAL0B,2CAAH,sDCmCjBsB,EAzCO,WAAO,IAAD,EACM7C,mBAAgB,IADtB,mBACnBV,EADmB,KACTwD,EADS,OAEkB9C,mBAAc,IAFhC,mBAEnBpD,EAFmB,KAEH2D,EAFG,OAGkBP,mBAAc,IAHhC,mBAGnBnD,EAHmB,KAGHC,EAHG,KAKpBiG,EAAW,uCAAG,4BAAAL,EAAA,sEACCF,ECdL,MDaI,OACZG,EADY,OAElBG,EAAY,YAAIH,IAFE,2CAAH,qDAKXpD,EAAiB,uCAAG,WAAOT,GAAP,eAAA4D,EAAA,sEACLE,EAAoB9D,GADf,OAClB6D,EADkB,OAExBpC,EAAkB,eAAKoC,IACvB7F,EAAkB,IAHM,2CAAH,sDAWvB,OALAqD,qBAAU,WACR4C,MAEC,IAGD,sBAAKpF,UAAU,MAAf,UACE,cAAC,IAAD,UACE,cAAC,EAAD,CACE2B,SAAUA,EACV1C,eAAgBA,EAChB2C,kBAAmBA,EACnBzC,kBAAmBA,EACnByD,kBAAmBA,MAGvB,cAAC,EAAD,CACE3D,eAAgBA,EAChBC,eAAgBA,EAChBC,kBAAmBA,QE7BZkG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,YCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48285645.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bicycle-solid.76ee6971.svg\";","import React, { createContext, Dispatch, useContext, useReducer } from 'react';\n\ntype Action = { type: string; payload: any };\n\ninterface State {\n  hideDetails: boolean;\n}\n\nconst initialValue = {\n  hideDetails: true,\n};\n\nexport const mapContext = createContext<{\n  state: State;\n  dispatch: Dispatch<Action>;\n}>({ state: initialValue, dispatch: () => null });\n\nexport const useMapContext = () => useContext(mapContext);\n\nexport const hideDetails: any = (isHidden: boolean) => ({\n  type: 'HIDE_DETAILS',\n  payload: { isHidden },\n});\n\nconst reducer = (state: State = initialValue, action: Action) => {\n  const { isHidden } = action.payload;\n\n  switch (action.type) {\n    case 'HIDE_DETAILS':\n      return { ...state, hideDetails: isHidden };\n    default:\n      return state;\n  }\n};\n\nconst MapContextProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialValue);\n  const value = {\n    state,\n    dispatch,\n  };\n\n  return <mapContext.Provider value={value}>{children}</mapContext.Provider>;\n};\n\nexport default MapContextProvider;\n","import { MapContainer, Marker, Popup, TileLayer, useMap } from 'react-leaflet';\nimport { Icon } from 'leaflet';\nimport BikeIcon from '../../assets/svg/bicycle-solid.svg';\nimport 'leaflet/dist/leaflet.css';\nimport './map-style.scss';\nimport {\n  hideDetails,\n  useMapContext,\n} from '../../context/map-context/map-context';\n\ninterface MapProps {\n  networkDetails: any;\n  networkStation: any;\n  setNetworkStation: any;\n}\n\nconst LATLNG_ES: [number, number] = [40.463667, -3.74922];\n\nconst Map: React.FC<MapProps> = ({\n  networkDetails,\n  networkStation,\n  setNetworkStation,\n}) => {\n  const { state, dispatch } = useMapContext();\n\n  const MapComponent: React.FC<{\n    center: any;\n    zoom: any;\n  }> = ({ center, zoom }) => {\n    const map = useMap();\n    map.flyTo(center, zoom);\n    return null;\n  };\n\n  const markerIcon = new Icon({\n    iconUrl: BikeIcon,\n    iconRetinaUrl: BikeIcon,\n    popupAnchor: [2, -20],\n    iconSize: [24, 24],\n    className: 'map-marker-icon',\n  });\n\n  const centerPosition = () => {\n    if (!!Object.keys(networkDetails).length) {\n      if (!!Object.keys(networkStation).length) {\n        return [networkStation.latitude, networkStation.longitude];\n      }\n      return [\n        networkDetails.location.latitude,\n        networkDetails.location.longitude,\n      ];\n    }\n    return LATLNG_ES;\n  };\n\n  const zoomPosition = () => {\n    if (!!Object.keys(networkDetails).length) {\n      if (Object.keys(networkStation).length) return 14;\n      return 15;\n    }\n    return 6;\n  };\n\n  const openPopup = (station: {}) => {\n    setNetworkStation({ ...station });\n    dispatch(hideDetails(false));\n  };\n\n  const handleHideDetails = () => {\n    dispatch(hideDetails(!state.hideDetails));\n  };\n\n  return (\n    <div className=\"map-wrapper\">\n      <MapContainer\n        className=\"map\"\n        center={\n          !!Object.keys(networkDetails).length\n            ? [\n                networkDetails.location.latitude,\n                networkDetails.location.longitude,\n              ]\n            : LATLNG_ES\n        }\n        zoom={Object.keys(networkDetails).length ? 15 : 6}\n        scrollWheelZoom={false}\n      >\n        <MapComponent center={centerPosition()} zoom={zoomPosition()} />\n        {!!Object.keys(networkDetails).length &&\n          networkDetails.stations.map((station: any) => (\n            <Marker\n              key={station.id}\n              position={[station.latitude, station.longitude]}\n              icon={markerIcon}\n            >\n              <Popup onOpen={() => openPopup(station)}>{station.name}</Popup>\n            </Marker>\n          ))}\n\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png\"\n        />\n        {/*  <TileLayer\n          attribution='Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://stamen-tiles-{s}.a.ssl.fastly.net/toner-hybrid/{z}/{x}/{y}{r}.png\"\n        /> */}\n      </MapContainer>\n\n      <div className={`map-details${state.hideDetails ? ' hide' : ''}`}>\n        <button className=\"map-details-button\" onClick={handleHideDetails}>\n          <p className={state.hideDetails ? 'inverted' : ''}>v</p>\n        </button>\n        <div className=\"map-details-container\">\n          {!!Object.keys(networkDetails).length ? (\n            !!Object.keys(networkStation).length ? (\n              <>\n                <div className=\"map-details-container__heading\">\n                  <h3>{networkStation.name}</h3>\n                </div>\n                <p>Empty slots: {networkStation.empty_slots}</p>\n                <p>Free bikes: {networkStation.free_bikes}</p>\n              </>\n            ) : (\n              !state.hideDetails && (\n                <p>No station selected. Please, choose one.</p>\n              )\n            )\n          ) : (\n            !state.hideDetails && <p>No city selected. Please, choose one.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Map;\n","import { useHistory } from 'react-router';\n\ninterface CitiesProps {\n  networks: any[];\n  getNetworkDetails: (id: string) => void;\n  clearSearchInput: () => void;\n}\n\nconst Cities: React.FC<CitiesProps> = ({\n  networks,\n  getNetworkDetails,\n  clearSearchInput,\n}) => {\n  const history = useHistory();\n\n  const handleCitySelection = (id: string) => {\n    clearSearchInput();\n    getNetworkDetails(id);\n    history.push(`/stations/:${id}`);\n  };\n\n  return (\n    <ul className=\"sidebar-main-results\">\n      {networks.length ? (\n        networks.map(({ id, location: { city } }) => (\n          <li\n            key={id}\n            className=\"sidebar-main-results__item\"\n            onClick={() => handleCitySelection(id)}\n          >\n            <p>{city}</p>\n          </li>\n        ))\n      ) : (\n        <p>No results…</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Cities;\n","import { Dispatch, useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\n\ninterface StationsProps {\n  networkDetails: any;\n  setNetworkStation: Dispatch<any>;\n  getNetworkDetails: (id: string) => void;\n  clearSearchInput: () => void;\n}\n\nconst Stations: React.FC<StationsProps> = ({\n  networkDetails,\n  setNetworkStation,\n  getNetworkDetails,\n  clearSearchInput,\n}) => {\n  const { id }: { id: string } = useParams();\n  const [activeId, setActiveId] = useState<string>();\n\n  useEffect(() => {\n    const normalizedId = id.slice(1);\n    getNetworkDetails(normalizedId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id]);\n\n  return (\n    <ul className=\"sidebar-main-results\">\n      {Object.keys(networkDetails).length &&\n      networkDetails.stations.length !== 0 ? (\n        networkDetails.stations.map((station: any) => (\n          <li\n            key={station.id}\n            className={`sidebar-main-results__item${\n              activeId === station.id ? ' active' : ''\n            }`}\n            onClick={() => {\n              setActiveId(station.id);\n              setNetworkStation({ ...station });\n              clearSearchInput();\n            }}\n          >\n            <p>{station.name}</p>\n          </li>\n        ))\n      ) : (\n        <p>No results…</p>\n      )}\n    </ul>\n  );\n};\n\nexport default Stations;\n","import React, { Dispatch, useEffect, useState } from 'react';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Cities from '../../components/cities/cities';\nimport Stations from '../../components/stations/stations';\nimport {\n  hideDetails,\n  useMapContext,\n} from '../../context/map-context/map-context';\nimport './sidebar-style.scss';\n\nexport interface SidebarProps {\n  networks: any[];\n  networkDetails: any;\n  getNetworkDetails: (id: string) => void;\n  setNetworkStation: Dispatch<any>;\n  setNetworkDetails: Dispatch<any>;\n}\n\nconst Sidebar: React.FC<SidebarProps> = ({\n  networks,\n  networkDetails,\n  getNetworkDetails,\n  setNetworkStation,\n  setNetworkDetails,\n}) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { dispatch } = useMapContext();\n  const [inputSearch, setInputSearch] = useState<string>('');\n  const [inputFocus, setInputFocus] = useState<boolean>(false);\n  const [filteredNetworks, setFilteredNetworks] = useState<any[]>();\n  const [filteredStations, setFilteredStations] = useState<any[]>();\n\n  const goBack = () => {\n    clearSearchInput();\n    setNetworkStation({});\n    setNetworkDetails({});\n    history.push('/');\n    dispatch(hideDetails(true));\n  };\n\n  const isHome = location.pathname === '/';\n\n  const heading = isHome ? 'Choose a city' : 'Choose a station';\n\n  const handleSearchInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setInputSearch(value);\n\n    if (isHome) {\n      const filteredResults = filterNetworkResults(value);\n      return setFilteredNetworks(filteredResults);\n    }\n\n    const filteredResults = filterStationResults(value);\n    setFilteredStations(filteredResults);\n  };\n\n  const clearSearchInput = () => {\n    setInputSearch('');\n  };\n\n  const filterNetworkResults = (input: string) =>\n    networks.filter((network) =>\n      network.location.city.toLowerCase().includes(input)\n    );\n\n  const filterStationResults = (input: string) => {\n    return {\n      ...networkDetails,\n      stations: networkDetails.stations.filter(({ name }: { name: string }) =>\n        name.toLowerCase().includes(input)\n      ),\n    };\n  };\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <div className=\"sidebar-header-logo\">\n          <h1>Bike Locator App</h1>\n        </div>\n        <div className=\"sidebar-header-title\">\n          <h2>{heading}</h2>\n        </div>\n        <div\n          className={`sidebar-header-search${inputFocus ? ' focus' : ''}${\n            !!inputSearch ? '' : ' icon-hidden'\n          }`}\n          onFocus={() => setInputFocus(true)}\n          onBlur={() => setInputFocus(false)}\n        >\n          <input\n            value={inputSearch}\n            onChange={handleSearchInput}\n            placeholder={\n              isHome ? 'Search for a city…' : 'Search for a station…'\n            }\n          />\n          <div\n            className=\"sidebar-header-search__icon\"\n            onClick={clearSearchInput}\n          />\n        </div>\n      </div>\n\n      <div className=\"sidebar-main\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Cities\n              networks={filteredNetworks || networks}\n              getNetworkDetails={getNetworkDetails}\n              clearSearchInput={clearSearchInput}\n            />\n          </Route>\n          <Route path=\"/stations/:id\">\n            <Stations\n              networkDetails={filteredStations || networkDetails}\n              setNetworkStation={setNetworkStation}\n              getNetworkDetails={getNetworkDetails}\n              clearSearchInput={clearSearchInput}\n            />\n          </Route>\n        </Switch>\n      </div>\n      <div className=\"sidebar-footer\">\n        <button\n          className={`sidebar-footer-button${isHome ? ' disabled' : ''}`}\n          disabled={isHome}\n          onClick={goBack}\n        >\n          <p>Volver atrás</p>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'http://api.citybik.es/v2/networks/',\n});\n","import axios from '../axios';\n\nexport const fetchNetworks = async (country?: string) => {\n  const {\n    data: { networks },\n  }: any = await axios('/');\n  if (country) {\n    return networks.filter(\n      (network: any) => network.location.country === country\n    );\n  }\n  return networks;\n};\n\nexport const fetchNetworkDetails = async (id: string) => {\n  const {\n    data: { network },\n  }: any = await axios(id);\n\n  return network;\n};\n\nexport const fetchNetworksByCity = async (city: string) => {\n  const networks = await fetchNetworks();\n  return networks.filter((network: any) => network.location.city === city);\n};\n","import { useEffect, useState } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.scss';\nimport { ES } from './constants/country-codes';\nimport Map from './containers/map/map';\nimport Sidebar from './containers/sidebar/sidebar';\nimport { fetchNetworkDetails, fetchNetworks } from './services/citybik-api';\n\nconst App: React.FC = () => {\n  const [networks, setNetworks] = useState<any[]>([]);\n  const [networkDetails, setNetworkDetails] = useState<any>({});\n  const [networkStation, setNetworkStation] = useState<any>({});\n\n  const getNetworks = async () => {\n    const data = await fetchNetworks(ES);\n    setNetworks([...data]);\n  };\n\n  const getNetworkDetails = async (id: string) => {\n    const data = await fetchNetworkDetails(id);\n    setNetworkDetails({ ...data });\n    setNetworkStation({});\n  };\n\n  useEffect(() => {\n    getNetworks();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <Router>\n        <Sidebar\n          networks={networks}\n          networkDetails={networkDetails}\n          getNetworkDetails={getNetworkDetails}\n          setNetworkStation={setNetworkStation}\n          setNetworkDetails={setNetworkDetails}\n        />\n      </Router>\n      <Map\n        networkDetails={networkDetails}\n        networkStation={networkStation}\n        setNetworkStation={setNetworkStation}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export const ES = 'ES';\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './global-styles/reset-styles.scss';\nimport './global-styles/global.scss';\nimport MapContextProvider from './context/map-context/map-context';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MapContextProvider>\n      <App />\n    </MapContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}